/* NB the following is a global reset that you should do every time */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box
}

/* PAGE SECTIONS */
body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 1200px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* background-color: red; */
  padding: 20px 40px;
  margin-bottom: 60px;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
  /* NB now the element disappeared / went to the bottom of the page */
  /* width: 500px; */
  /* NB BOX SIZING PROPERTY: in the normal box model the final element width (height) is: */
  /* NB == right (top) border + right (top) padding + width (height) + left (bottom) padding + left (bottom) border */
  /* NB we have a way to define a certain width (height) and then the element would be exactly that size, no matter the border or padding */
  /* NB box-sizing: "border-box" and with this the width and height go all the way from one side of the border to the opposite side of the borser (including the content and the padding) */
  /* so that the width and height that we define, will actually be the final width and height; and if you have some padding on the element, this will be subtracted from the content area and therefore make it smaller */
  /* NB the default behavior is called content-box */
  /* box-sizing: border-box */
  /* NB since we want to have it applied to all the elements of the page, we will put this in the * selector at the beginning */
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}


#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
  margin-left: 0
}

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}


/* Styling links */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}

.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;
  position: absolute;
  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h2 {
  position: relative;
}

h2::before {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* =========================== LAYOUTS (FLOAT) =============================== */
.author-img {
  float: left;
  /* NB with float: left this image is going to be taken out of the document flow (like with position absolute */
  /* with float, all the other elements will float around it */
  margin-bottom: 20px;
  /* a float element can create some margins around it */
}

.author {
  /* padding-left: 10px; */
  /* this padding does not change anything */
  /* this p element starts right at the beginning of the container, where also the img starts */
  /* in order to see a difference, you should add a bigger padding, like 80px */
  /* padding-left: 80px; */
  /* padding-top: 10px */
  /* NB to fix this, we can float this element as well */
  float: left;
  /* now the p element starts right after the float image element */
  margin-left: 10px;
  margin-top: 10px;
  /* and now small padding values work as intended */
  /* NB now we have more modern ways of doing this (Flexbox and CSS Grid) */
}

/* IMPORTANT COLLAPSING ELEMENT */
/* header has 2 children: h1 and nav; if we float them we remove from the nromal flow, it is as if we removed them from the page */
/* therefore the header collapses */
/* NB the container of the floated elements will not adjust its height to the element */
h1 {
  float: left
}

nav {
  float: right
}

/* = Clearing floats */
/* if in the html you add <div class="clear"></div> as element in the header */
.clear {
  clear: both;
  /* NB this is to clear floats: you can use the value "both" to clear both left and right float */
  /* NB otherwise we can use left to clear the left float, and right to clear the right float */
}

/* = alternative to clearing floats: the clearfix hack */
/* add the clearfix class in the header */
.clearfix::after {
  content: "";
  clear: both;
  display: block;
}

article {
  /* background-color: rgb(134, 224, 85); */
  width: 825px;
  float: left
}

aside {
  /* background-color: rgba(205, 102, 50, 0.877); */
  width: 300px;
  float: right
}

footer {
  /* background-color: rgba(231, 231, 64, 0.822); */
  /* we can clear the float on this element (no ned to create an empty div or using the clearfix class */
  clear: both
}