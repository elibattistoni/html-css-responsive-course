/*
our design starts to break at around 1300px
and there is also an extremely common screen size at 1366px
(the so called HD-ready screens)

NB like we don't use px in the layout, we SHOULD NOT USE PX FOR MEDIA QUERIES
because pixels will not adjust to the user's font size setting in the browser and also not to the user's zooom level

IMPORTANT however the responsive units in media queries do not respond to this font size setting in the HTML 
(i.e. to the root element font size)
==> i.e in media queries, 1 rem != 10px; 1 rem = the default font size browser setting
==> em and rem do not depend on html font-size in media queries!
==> instead, we assume that 1 rem == 1 rem == 16px
NB rem has some bugs in some browsers when used in media queries, therefore in media queries we should not use rem but em

NB when building a responsive design, you should start at the top, i.e. at the biggest width, and then make it smaller and smaller and keep adjusting whenever the design breaks
NB obviously if you build mobile first, you will work in the smae way but starting from the smallest width and then make it bigger and bigger


IMPORTANT a media query should work over a range of at least 200 or 300px!!!
*/

/*=*******************************************/
/*# BELOW circa 1350px ==> SMALLER DESKTOPS */
/*=*******************************************/

/* when shrinking the page with the dev tool in the broswers, we chose to set a first breakpoint between 1300 and 1366 px */
/* so let's choose 1350px */
/* to convert that to em we simply do divide it by 16px: 1350 / 16 = 84 (rounded up) */
/* 84 * 16 = 1344 */
@media (max-width: 84em) {
  .hero {
    max-width: 120rem;
    /* NB this rem has nothing to do with that em, it works exactly as before in general.css */
  }

  /* since the heading became of 4 rows, let's decrease it as well; in general.css it is 5.2rem (i.e. 52px) */
  /* therefore let's try to step it down to the value below */
  .heading-primary {
    font-size: 4.4rem;
  }

  /* IMPORTANT BEST PRACTICE: do not add too many media queries; you should not add 10 or 15 media queries to fix every single problem */
  /* so we will use our media query, the breakpoint that we already have, and we will switch the 3 columns layout of the gallery to 2 columns */
  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/*=*****************************************************/
/*# BELOW circa 1200px ==> TABLETS (Landscape tablets) */
/*=*****************************************************/
/* at 1200px it is a very very common breakpoint */
/* 1200 / 16 = 75 */

@media (max-width: 75em) {

  /* NB everything we are doing here only works because we already have the other 3 responsive web design ingredients already in place */
  /* i.e a fluid grid, responsive images and responsive units. otherwise none of this would work */
  /* responsive units ==> in general.css and style.css we have used rem all the time */
  /* which means that all the sizes are dependent on the font-size of the root element (the html element) */
  /* so if now we change that, every single font size and length will immediately change */
  html {
    /* we want a font size of 9px but in rem ==> 9px / 16px = 56.25 */
    font-size: 56.25%;
  }

  .grid {
    /* NB look at the spacing system of the design system at the bottom of the page */
    column-gap: 4.8rem;
    row-gap: 6.4rem
  }

  .heading-secondary {
    font-size: 3.6rem;
    /* important for these changes always look at the design system of the font size */
  }

  .heading-tertiary {
    font-size: 2.4rem;
  }

  .header {
    padding: 0 3.2rem;
  }

  .main-nav-list {
    gap: 3.2rem;
  }

  .hero {
    gap: 4.8rem
  }

  .testimonials-container {
    padding: 9.6rem 3.2rem
  }
}


/*=*****************************************************/
/*# BELOW circa 9404px ==> TABLETS */
/*=*****************************************************/
/* cs 944 / 16 = ca 59 */

@media (max-width: 59em) {
  html {
    /* 8px / 16px = 0.5 = 50% */
    font-size: 50%;
  }

  /* change layout hero to 1 column instead of 2 */
  .hero {
    grid-template-columns: 1fr;
    padding: 0 8rem;
    gap: 6.4rem;
  }

  .hero-text-box, .hero-img-box {
    text-align: center
  }

  .hero-img {
    width: 60%
  }

  .delivered-meals {
    justify-content: center;
    margin-top: 3.2rem
  }

  .logos img {
    height: 2.4rem
  }

  .step-number {
    font-size: 7.4rem;
  }

  .meal-content {
    padding: 2.4rem 3.2rem 3.2rem 3.2rem;
  }

  .section-testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: repeat(6, 1fr);
  }

  .cta {
    /* 3/5 = 60% + 2/5 = 40% */
    grid-template-columns: 3fr 2fr;
  }

  .cta-form {
    grid-template-columns: 1fr;
  }

  .btn--form {
    margin-top: 1.2rem
  }

  /* MOBILE NAVIGATION */
  .btn-mobile-nav {
    display: block
  }

  .main-nav {
    background-color: rgba(255, 255, 255, 0.97);
    position: absolute;
    /* NB whenever we position something absolutely, we should always put
    NB position relative on the parent element in relation to which we want to position the mobile nav */
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    /* 100vh == 100 viewport heights to give it exactly 100% of the height's viewport */

    transform: translateX(100%);

    display: flex;
    align-items: center;
    justify-content: center;

    transition: all 0.5s ease-in;

    /* IMPORTANT BEST PRACTICE this is the correct way of hiding an element without using display:hidden */
    /* display: none NB careful with this because when you do this on an element, we can do no animations, transitions will not work */
    /* therefore: */
    /* 1. hide it visually */
    opacity: 0;
    /* 2. make it unaccessible to mouse and keyboard */
    pointer-events: none;
    /* 3. hide it from screen readers */
    visibility: hidden;
  }

  .nav-open .main-nav {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
    transform: translateX(0);
  }

  .nav-open .icon-mobile-nav[name="close-outline"] {
    display: block;
  }

  .nav-open .icon-mobile-nav[name="menu-outline"] {
    display: none;
  }


  .main-nav-list {
    flex-direction: column;
    gap: 4.8rem
  }

  .main-nav-link:link,
  .main-nav-link:visited {
    font-size: 3rem;
  }




  /*
- Font sizes (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Spacing system (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
*/