* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  /* NB this is done to remove all the margin and padding so that you can style better / have more control of the styling of the page */
  /* NB this is called global reset and it is the first thing that Jonas does when he begins a new project */
}

/* PAGE SECTIONS */
body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
  position: relative;
}

/* NB how to center the page? 1) wrap all the content that you want to center inside a dive; 2) apply this style */
/* NB if the parent is 700px wide, all its children are going to be 700px as well (the child element can never be wider than the parent element) */
.container {
  width: 800px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* margin: top-bottom left-right */
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

nav {
  font-size: 18px;
  /* text-align: center; */
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
  /* position: relative; */
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  /* padding-top: 50px;
  padding-bottom: 50px; */
  padding: 50px 0;
  width: 500px;
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

/* footer p {
  font-size: 16px;
} */

/*
= the problem with this type of selectors is that it essentially encodes
= the HTML structure into the CSS selector, and that is not a good idea
*/
/* article header p {
  font-style: italic;
} */

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related {
  list-style: none;
}

/* body {
  background-color: orangered;
} */

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

li:nth-child(even) {
  color: magenta;
}

/*NB Misconception: this won't work! */
/* NB this would work only if the paragraph would be the first child of the article */
article p:first-child {
  color: red;
  border: 1px solid red;
}

/* this works because there is a paragraph that is the last child of the article */
article p:last-child {
  color: red;
  border: 1px solid red;
}

/* NB TAKEAWAY: when we mix multiple elements inside of a parent element, then these pseudo-classes don't work really well */
/* NB they are perfect in situations in which all the child elements are the same, i.e. for li elements */

/* ========================================================================== */
/*# Styling links */
/* NB for styling hyperlinks, it is bad practice to style a on its own */
/* NB we should style directly with a pseudo class because it allows us to style the link in dfferent states */
/*
we shouldn't simply select the anchor and then style it.
Instead, we should style a pseudo class of the anchor
because that will then allow us to target different states.
NB define the states always in this order!!
/ LVHA
/ a:link
/ a:visited
/ a:hover
/ a:active
*/
/* a:link (:link is the pseudoclass) targets all anchor elements that have an href attribute (NB you can have anchor tags without an href attribute) */
a:link {
  color: #1098ad;
  text-decoration: none;
  /*get rid of underline*/
}

/* ":visited" pseudoclass  --> there are websites that give a different colors to links that have been clicked before (e.g. google) */
/* we could do the same, but in practice we actually never do it (usually we give the visited link the same color of the normal link) */
a:visited {
  /* color: #777; */
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline wavy orangered;
  /* text-decoration: underline dotted orangered; */
}

/* :active is the state in which we are actually clicking */
a:active {
  background-color: black;
  font-style: italic;
}


/* ========================================================================== */

.post-img {
  /* NB percentage of the width of the parent container */
  width: 100%;
  height: auto;
  /* images are actually inline block elements */
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px;
  display: block; */
  /* NB the anchor element is an inline element! therefore adding margin top and bottom to an inline element (even if in the computed styles in the dev tools appear, they are not really added */
  /* NB therefore you need to change it from inline to inline-block */
  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* top: 50px;
  left: 50px; */
  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h3+p::first-line {
  /* color: red; */
}

h2 {
  /* background-color: orange; */
  position: relative;
}

h2::before {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* Resolving conflicts */
/* #copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green !important;
} */

/* nav a:link,
nav p {
  font-size: 18px;
} */